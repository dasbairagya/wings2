import React, { Component } from "react";
import NavBar from "./NavBar.jsx";
import "../App.css";

class BookAppointment extends Component {
  constructor() {
    super();
    this.state = {
      namesList: [],
      namesIdsDic:{},
      name: "",
      disease: "",
      date: "",
      timing: "",
      description: ""
    };
    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
    this.handleDropdownChange = this.handleDropdownChange.bind(this);
    this.handleDropdownNameChange = this.handleDropdownNameChange.bind(this);
  }
  handleChange(e) {
    let target = e.target;
    let value = target.type === "checkbox" ? target.checked : target.value;
    let name = target.name;

    this.setState({
      [name]: value
    });
  }
  handleDropdownChange(e) {
    
    if(e.target.value === "N/A")
      alert("please select slot other than N/A")
    this.setState({ slot: e.target.value });
  }
  handleDropdownNameChange(e) {
    
    this.setState({ name: e.target.value });
  }

  handleSubmit(e) {
  }
  handleCancel(e) {
    this.props.history.push("/allAppointments");
  }

  canBeSubmitted() {
    const { name, disease, date, timing, description } = this.state;
    return (
       name.length > 4 &&
      disease.length > 0 &&
      date.length > 0 &&
      description.length > 0
    );
  }
  render() {
    const names = this.state.namesList;
    const isEnabled = this.canBeSubmitted();
    const date=new Date();

    return (
      <div>
        <NavBar />
        <div>
          <p
            style={{
              textAlign: "center",
              paddingBottom: "10px",
              paddingTop: "30px",
              fontSize: "2em"
            }}
          >
            Booking Appointment
          </p>
        </div>
        <div className="FormCenter">
          <form className="FormFields">
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Name of the Patient
              </label>
              <select id="dropdown" onChange={this.handleDropdownNameChange} className="DropDowns">
                  <option value="N/A">N/A</option>
                  {names.map((name, index) => ( 
                  <option value={name}>{name}</option>
                ))}
                }
              </select>
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Disease
              </label>
              <input
                type="disease"
                id="disease"
                className="FormField__Input"
                placeholder="Enter Disease"
                name="disease"
                value={this.state.disease}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Date
              </label>
              <input
                type="date" 
                min={`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`}  
                id="date"
                className="FormField__Input"
                //className="unstyled"
                placeholder="Enter date in the form of dd/mm/yyyy"
                name="date"
                value={this.state.date}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Slots
              </label>
              <select id="dropdown" class = "DropDowns" ref = {(input)=> this.state.timing = input}>
                <header>select slots </header>
                <option value="N/A">N/A</option>
                <option value="10-11 AM">10-11 AM</option>
                <option value="1-2 PM">1-2 PM</option>
                <option value="3-4 PM">3-4 PM</option>
                <option value="6-8 PM">6-8 PM</option>
              </select>
    
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Description
              </label>
              <input
                type="description"
                id="description"
                className="FormField__Input"
                placeholder="Enter Description"
                name="description"
                value={this.state.description}
                onChange={this.handleChange}
                required
              ></input>
            </div>
            <div className="SideRow">
              <button
                id="bookbtn"
                onClick={this.handleSubmit}
                className="FormField__Button mr-20"
                type="submit"
              >
                Book Now
              </button>
              </div>
              <div className="SideRow">
              <button
                onClick={this.handleCancel}
                className="FormField__Button mr-20"
                type="btn"
              >
                Cancel
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  }
}

export default BookAppointment;
