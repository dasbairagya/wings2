import React, { Component } from "react";
import { NavLink } from "react-router-dom";
import NavBar from "./NavBar.jsx";

import "../App.css";

class EditAppointment extends Component {
  constructor(props) {
    super(props);
    this.state = {
      appointmentId : props.match.params.appId,
      patients: "",
      disease: "",
      date: "",
      timings: "",
      description: ""
    };
    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
  }
  handleSubmit(e) {
  }

  canBeSubmitted() {
    const { patients, disease, date, timings, description } = this.state;
    return (
      patients.length > 0 &&
      disease.length > 0 &&
      date.length > 0 &&
      timings.length > 0 &&
      description.length > 0
    );
  }
  handleCancel(e) {
    this.props.history.push("/allAppointments");
  }
  handleChange(e) {
    let target = e.target;
    let value = target.type === "checkbox" ? target.checked : target.value;
    let name = target.name;
    
    this.setState({
      [name]: value
    });
  }

  

  render() {
    const {appointmentId} = this.state;
    
    if(!appointmentId) {
    return (<h1>No appointments Found</h1>);
    }
    return (
      <div>
        <NavBar />
        <div>
          <p
            style={{
              textAlign: "center",
              paddingBottom: "10px",
              paddingTop: "30px",
              fontSize: "2em"
            }}
          >
            Edit Appointment
          </p>
        </div>
        <div className="FormCenter">
          <form className="FormFields">
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Name
              </label>
              <input
                type="text"
                id="patients"
                className="FormField__Input"
                placeholder="Enter name"
                name="patients"
                value={this.state.patients}
                disabled
                onChange={this.handleChange}
                required
              />
            </div>

            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Enter your disease :
              </label>
              <input
                type="disease"
                id="disease"
                className="FormField__Input"
                placeholder="Enter disease"
                name="disease"
                value={this.state.disease}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Date
              </label>
              <input
                type="date"
                id="date"
                className="FormField__Input"
                placeholder="Enter date in format of dd/mm/yyyy"
                name="date"
                value={this.state.date}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Slots
              </label>
              <input
                type="slot"
                id="timings"
                className="FormField__Input"
                placeholder="Enter timings"
                name="timings"
                value={this.state.timings}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Description
              </label>
              <input
                type="description"
                id="description"
                className="FormField__Input"
                placeholder="Enter description"
                name="description"
                value={this.state.description}
                onChange={this.handleChange}
                required
              />
            </div>

            <div className="SideRow">
              <button
                onClick={this.handleSubmit}
                type="submit"
                className="FormField__Button mr-20"
              >
                Submit
              </button>
            </div>
            <div className="SideRow">
              <button
                onClick={this.handleCancel}
                className="FormField__Button mr-20"
              >
                Cancel
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  }
}

export default EditAppointment;
