from django.shortcuts import render
from rest_framework import generics
from rest_framework.response import Response
from .serializers import PuppyaddSerializer, BookPuppySerializer
from django.core import serializers
from rest_framework import status
from .models import Addpuppy, Bookpuppy


#Method to add a new puppy 
class AddpuppyView(generics.CreateAPIView):
    serializer_class = PuppyaddSerializer

    def create(self, request, *args, **kwargs):
    	serializer = self.get_serializer(data=request.data)
    	serializer.is_valid(raise_exception=True)
    	if self.check_details(self.request.data):
    		self.perform_create(serializer)    	
    		return Response(data={"message": "Added successfully.","status": 1}, status=status.HTTP_201_CREATED)
    	return Response(data={"message": "Password or username policy failed.","status": 0}, status=status.HTTP_400_BAD_REQUEST)

    @staticmethod
    def check_details(data):
    	return len(data['Color']) < 11 and len(data['Breed']) < 10


class EditpuppyView(generics.RetrieveUpdateAPIView):
    queryset = Addpuppy.objects.all()
    serializer_class = PuppyaddSerializer

# Method to list all the puppies
class ListpuppyView(generics.ListAPIView):
    queryset = Addpuppy.objects.all()
    serializer_class = PuppyaddSerializer

# Method to delete the puppy
class DeletepuppyView(generics.DestroyAPIView):
    queryset = Addpuppy.objects.all()
    serializer_class = PuppyaddSerializer

# Method to list a particular puppy
class SinglepuppyView(generics.RetrieveAPIView):
    queryset = Addpuppy.objects.all()
    serializer_class = PuppyaddSerializer

# Method to book puppy
class BookPuppyView(generics.CreateAPIView):
    serializer_class = BookPuppySerializer

    def create(self, request, *args, **kwargs):
        serializer = self.get_serializer(data=request.data)
        serializer.is_valid(raise_exception=True)
        self.perform_create(serializer)
        return Response(data={"message": "Booked successfully.","status": 1}, status=status.HTTP_201_CREATED)

# Method to list a booked puppy
class ListBookedpuppyView(generics.ListAPIView):
    queryset = Bookpuppy.objects.all()
    serializer_class = BookPuppySerializer

# Method to view a single booked puppy
class SingleBookedpuppyView(generics.RetrieveAPIView):
    queryset = Bookpuppy.objects.all()
    serializer_class = BookPuppySerializer

# Method to delete booked puppy
class DeleteBookedpuppyView(generics.DestroyAPIView):
    queryset = Addpuppy.objects.all()
    serializer_class = BookPuppySerializer
       