import React, { Component } from "react";
import { NavLink } from "react-router-dom";
import NavBar from "./NavBar.jsx";
import "../App.css";

class AddPatient extends Component {
  constructor(props) {
    super(props);

    this.state = {
      name: "",
      email: "",
      dob: "",
      location: "",
      mobile: ""
    };

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
  }

  handleChange(e) {
    let target = e.target;
    let value = target.type === "checkbox" ? target.checked : target.value;
    let name = target.name;

    this.setState({
      [name]: value
    });
  }

    handleSubmit(e) {
      alert(1);
    e.preventDefault();
    this.canBeSubmitted();
 
    const data = {
      'user_name': this.state.name,
      'user_email': this.state.email,
      'password': this.state.password,
      'user_dob': this.state.dob,
      'user_mobile': this.state.mobile,
      'location': this.state.location,
    }
    const requestOptions = {
      method: 'POST',
      headers: { 'Content-Type': 'application/json'}, // ,'Authorization': 'Token adsfdsfdsfdf' },
      body: JSON.stringify(data),
    };

    fetch('https://serverakshwut3-ws-dev-server-8000.in-dc-8.projects.hrcdn.net/patients/register/', requestOptions)
    .then(response => response.json())
    .then(data => {
      console.log(data);

      alert(data.message)
      // this.props.history.push(`/sign-in/`);
    })
    .catch(error => console.log(error))
  
  }
  handleCancel(e) {
    e.preventDefault();
    this.props.history.push("/allPatients");
  }
  canBeSubmitted() {
    const { name, email, dob, location, mobile } = this.state;
    return (
      name.length > 0 &&
      email.length > 0 &&
      dob.length > 0 &&
      location.length > 0 &&
      mobile.length > 0
    );
  }

  render() {
    const isEnabled = this.canBeSubmitted();
    const name = this.state.name;
    const date=new Date();
    return (
      <div>
        <NavBar />
        <div>
          <p
            style={{
              textAlign: "center",
              paddingBottom: "10px",
              paddingTop: "30px",
              fontSize: "2em"
            }}
          >
            Adding a Patient
          </p>
        </div>
        <div className="FormCenter">
          <form className="FormFields">
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Name
              </label>
              <input
                type="text"
                id="name"
                className="FormField__Input"
                placeholder="Enter Full name"
                name="name"
                value={this.state.name}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                E-mail ID
              </label>
              <input
                type="email"
                id="email"
                className="FormField__Input"
                placeholder="Enter email"
                name="email"
                value={this.state.email}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Date of Birth
              </label>
              <input
                type="date"
                max= {`${date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()}`}
                id="dob"
                className="FormField__Input"
                placeholder="Enter date of birth in dd/mm/yyyy format"
                name="dob"
                value={this.state.dob}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Location
              </label>
              <input
                type="text"
                id="location"
                className="FormField__Input"
                placeholder="Enter location"
                name="location"
                value={this.state.location}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Mobile
              </label>
              <input
                type="text"
                id="mobile"
                className="FormField__Input"
                placeholder="Enter mobile"
                name="mobile"
                value={this.state.mobile}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="SideRow">
              <button
                id="registerbtn"
                className="FormField__Button mr-20"
                data-action="add-patient"
                onClick={this.handleSubmit}
              >
                Register
              </button>
            </div>
            <div className="SideRow">
              <button
                onClick={this.handleCancel}
                className="FormField__Button mr-20"
              >
                Cancel
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  }
}

export default AddPatient;
