  import React, { Component } from "react";
import NavBar from "./NavBar.jsx";
import "../App.css";
import AddPatient from "./AddPatient.jsx";

class AllAppointments extends Component {
  constructor() {
    super();
    this.state = {
      appointmentsList: []//appDetailsData.getData()
    };
    this.handleView = this.handleView.bind(this);
    this.handleEdit = this.handleEdit.bind(this);
    this.handleDelete = this.handleDelete.bind(this);
  }

    componentDidMount(){
    const requestOptions = {
      method: 'GET',
      headers: { 
        'Content-Type': 'application/json',
        // 'Authorization': 'Token adsfdsfdsfdf' 
      },
      Cache: 'default'
    };
  
    fetch('https://serverakshwut3-ws-dev-server-8000.in-dc-8.projects.hrcdn.net/appointment/list/', requestOptions)
    .then(response => response.json())
    .then(data => {
      // const allPatientNames = data.map(item => item.user_name); //to get the format like ['patient1', 'patient2', 'patient3']
      this.setState({ appointmentsList: data})
    })
    .catch(error => console.log(error))
   }

  handleView(appId) {
    
    this.props.history.push(`/viewAppointment/${appId}`);
  }
  handleEdit(appId) {
    
    this.props.history.push(`/editAppointment/${appId}`);
  }
  handleDelete(appId){

  }
  appsList() {
    if (this.state.appointmentsList.length == 0)
      return <h1>No Appointments Found</h1>;
  }
  render() {
    const {appointmentsList} = this.state;
    
    return (
      <div style={{ height: "100%" }}>
        <NavBar />

        <form style={{ display: "flex", height: "100%", alignItems: "center" }}>
          {appointmentsList.length === 0 ? (
            <h1 style={{ textAlign: "center", flexGrow: "1" }}>
              No Appoinments Found
            </h1>
          ) : (
            <div style={{ height: "100%", width: "100%" }}>
              <div>
                <p
                  style={{
                    textAlign: "center",
                    paddingBottom: "10px",
                    paddingTop: "10px",
                    fontSize: "2em",
                    color: "Slate Blue"
                  }}
                >
                  List of All Appointments
                </p>
              </div>
              {appointmentsList.map((appointment,index) => (
                <div
                  className="FormField"
                  text-align="right"
                  style={{ backgroundColor: "#D3D3D3" }}
                  light
                  expand="md"
                  fontSize="27px"
                >
                  <span style={{ fontSize: "20px" }}>{appointment.disease}, slot:{appointment.timings}</span>
                  <button
                    onClick={() => this.handleDelete(appointment.id)}
                    className="FormField__all__Button"
                  >
                    Delete
                  </button>
                  <button
                    onClick={() => this.handleEdit(appointment.id)}
                    className="FormField__all__Button"
                  >
                    Edit
                  </button>
                  <button
                    onClick={() => this.handleView(appointment.id)}
                    className="FormField__all__Button"
                  >
                    View
                  </button>
                </div>
              ))}
            </div>
          )}
        </form>
      </div>
    );
  }
}

export default AllAppointments;
