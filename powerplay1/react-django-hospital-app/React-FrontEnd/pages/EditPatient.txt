import React, { Component } from "react";
import "../App.css";
import NavBar from "./NavBar.jsx";
import {Route} from "react-router-dom";

class EditPatient extends Component {
  constructor(props) {
    super(props);
      this.id= props.match.params.id;
    this.state = {
      user_name : '',
      user_email : '',
      user_mobile:'',
      user_dob:'',
      location:''
    };
    this.handleSubmit = this.handleSubmit.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
    this.handleChange = this.handleChange.bind(this);
  }
  componentDidMount (){

    const requestOptions = {
      method: 'GET',
      headers: { 
        'Content-Type': 'application/json',
        // 'Authorization': 'Token adsfdsfdsfdf' 
      },
      Cache: 'default'
    };

    fetch('https://serverakshwut3-ws-dev-server-8000.in-dc-8.projects.hrcdn.net/patients/edit/'+this.id, requestOptions)
    .then(response => response.json())
    .then(data =>  this.setState(data))
    .catch(error => console.log(error))
  }
  handleSubmit(e) {

      e.preventDefault();
      this.canBeSubmitted();

      const requestOptions = {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json'}, // ,'Authorization': 'Token adsfdsfdsfdf' },
        body: JSON.stringify(this.state),
      };

      fetch('https://serverakshwut3-ws-dev-server-8000.in-dc-8.projects.hrcdn.net/patients/edit/'+this.id, requestOptions)
      .then(response => response.json())
      .then(data => {
        console.log(data);

        alert("Patient updated successfuly!")
        // this.props.history.push(`/sign-in/`);
      })
      .catch(error => console.log(error))
  }
  canBeSubmitted() {
    const { user_name, user_email, user_dob, location, user_mobile } = this.state;
    return (
      user_name.length > 0 &&
      user_email.length > 0 &&
      user_dob.length > 0 &&
      location.length > 0 &&
      user_mobile.length > 0
    );
  }
  handleCancel(e) {
    
    this.props.history.push("/allPatients");
  }
  handleChange(e) {
    let target = e.target;
    let value = target.type === "checkbox" ? target.checked : target.value;
    let name = target.name;
    this.setState({
      [name] : value
    });
  }
  render() {
    const { user_name } = this.state;
    if (!user_name) {
      return (<div>Patient doesnot exist</div>)
    }

    
    return (
      <div>
        <NavBar />
        <div>
          <p
            style={{
              textAlign: "center",
              paddingBottom: "10px",
              paddingTop: "10px",
              fontSize: "2em"
            }}
          >
            Edit patient
          </p>
        </div>
        <div className="FormCenter">
          
            <form className="FormFields">
              <div className="FormField">
                <label className="FormField__Label" htmlFor="name">
                  Name
                </label>
                <input
                  type="text"
                  id="user_name"
                  className="FormField__Input"
                  placeholder="Enter name"
                  name="user_name"
                  value={this.state.user_name}
                  onChange={this.handleChange}
                  required
                />
              </div>
              <div className="FormField">
                <label className="FormField__Label" htmlFor="name">
                  E-mail
                </label>
                <input
                  type="email"
                  id="user_email"
                  className="FormField__Input"
                  placeholder="Enter email"
                  name="user_email"
                  value={this.state.user_email}
                  onChange={this.handleChange}
                  required
                />
              </div>
              <div className="FormField">
                <label className="FormField__Label" htmlFor="name">
                  Date of Birth
                </label>
                <input
                  type="date"
                  id="user_dob"
                  className="FormField__Input"
                  placeholder="Enter date of birth"
                  name="user_dob"
                  value={this.state.user_dob}
                  onChange={this.handleChange}
                  required
                />
              </div>
              <div className="FormField">
                <label className="FormField__Label" htmlFor="name">
                  Location
                </label>
                <input
                  type="location"
                  id="location"
                  className="FormField__Input"
                  placeholder="Enter location"
                  name="location"
                  value={this.state.location}
                  onChange={this.handleChange}
                  required
                />
              </div>
              <div className="FormField">
                <label className="FormField__Label" htmlFor="name">
                  Mobile
                </label>
                <input
                  type="mobile"
                  id="user_mobile"
                  className="FormField__Input"
                  placeholder="Enter mobile"
                  name="user_mobile"
                  value={this.state.user_mobile}
                  onChange={this.handleChange}
                  required
                />
              </div>
              <div className="SideRow">
                <button
                  onClick={this.handleSubmit}
                  type="submit"
                  className="FormField__Button mr-20"
                  
                >
                  Submit
                </button>
              </div>
              <div className="SideRow">
                <button
                  type="button"
                  onClick={this.handleCancel}
                  className="FormField__Button mr-20"
                >
                  Cancel
                </button>
              </div>
            </form>
        </div>
      </div>
    );
  }
}

export default EditPatient;
