import React, { Component } from "react";
import { NavLink } from "react-router-dom";
import NavBar from "./NavBar.jsx";
import "../App.css";


class EditProfile extends Component {
  constructor() {
    super();
    this.state = {
      user_name: '',
      user_email: '',
      user_dob: '',
      user_mobile:'',
      location:''
    };
    this.handleSubmit = this.handleSubmit.bind(this);
    this.handleChange = this.handleChange.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
  }

  handleSubmit(e) {
    e.preventDefault();
    this.canBeSubmitted();

    const requestOptions = {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json'}, // ,'Authorization': 'Token adsfdsfdsfdf' },
      body: JSON.stringify(this.state),
    };

    fetch('https://serverakshwut3-ws-dev-server-8000.in-dc-8.projects.hrcdn.net/editprofile/'+ this.state.userId, requestOptions)
    .then(response => response.json())
    .then(data => {
      // console.log(data);
      alert("Profile updated successfuly!")
    })
    .catch(error => console.log(error))
  }

  handleChange(e) {
    let target = e.target;
    let value = target.type === "checkbox" ? target.checked : target.value;
    let name = target.name;

    this.setState({
      [name]: value
    });
  }
  canBeSubmitted() {
    const { user_name, user_email, user_dob } = this.state;
    return (user_name.length > 0 && user_email.length > 0 && user_dob.length > 0);
  }
  handleCancel(e) {
    this.props.history.push("/allPatients");
  }

  componentDidMount(){
    const user = localStorage.getItem('user');
    if(user){
      this.state.userId =  JSON.parse(user).id; //string to array
    }
  
    const requestOptions = {
      method: 'GET',
      headers: { 
        'Content-Type': 'application/json',
        // 'Authorization': 'Token adsfdsfdsfdf' 
      },
      Cache: 'default'
    };
  
    fetch('https://serverakshwut3-ws-dev-server-8000.in-dc-8.projects.hrcdn.net/editprofile/'+ this.state.userId, requestOptions)
    .then(response => response.json())
    .then(data => {
      this.setState(data)
    })
    .catch(error => console.log(error))
    
   }
  render() {
     const { admin } = this.state;
     
    return (
      <div>
        <NavBar />
        <div>
          <h3 style={{ textAlign: "center", paddingBottom: "10px",paddingTop:"10px" }}>
            Do you like to edit the details
          </h3>
        </div>

        <div className="FormCenter">
          <form className="FormFields">
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Username
              </label>
              <input
                type="text"
                id="user_name"
                className="FormField__Input"
                placeholder="Enter your name"
                name="user_name"
                value={this.state.user_name}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                E-mail
              </label>
              <input
                type="email"
                id="user_email"
                className="FormField__Input"
                placeholder="Enter email"
                name="user_email"
                value={this.state.user_email}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
              <label className="FormField__Label" htmlFor="name">
                Date of Birth
              </label>
              <input
                type="date"
                id="user_dob"
                className="FormField__Input"
                placeholder="Enter date in fomat of dd/mm/yyyy"
                name="user_dob"
                value={this.state.user_dob}
                onChange={this.handleChange}
                required
              />
            </div>
            <div className="FormField">
               <label className="FormField__Label" htmlFor="name">
               Mobileno
               </label>
               <input
                type="text"
                id="user_mobile"
                className="FormField__Input"
                placeholder="Enter mobileno"
                name="user_mobile"
                value={this.state.user_mobile}
                onChange={this.handleChange}
                required
               />            
            </div>
            <div className="FormField">
            <label className="FormField__Label" htmlFor="name">
            Location
            </label>
            <input
            type="text"
            id="location"
            name="location"
            className="FormField__Input"
            placeholder="Enter location"
            value={this.state.location}
            onChange={this.handleChange}
            required
            />
            </div>
            <div className="SideRow">
                <button
                  onClick={this.handleSubmit}
                  type="submit"
                  className="FormField__Button mr-20"
                  
                >
                  Submit
                </button>
              </div>
              <div className="SideRow">
                <button
                  type="button"
                  onClick={this.handleCancel}
                  className="FormField__Button mr-20"
                >
                  Cancel
                </button>
              </div>
          </form>
        </div>
      </div>
    );
  }
}

export default EditProfile;
